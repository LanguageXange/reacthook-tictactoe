{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","components/helper.js","App.js","index.js"],"names":["style","background","border","fontSize","fontWeight","cursor","outline","width","height","color","Square","onClick","value","borderRadius","margin","display","gridTemplate","Board","squares","map","square","i","key","textAlign","Game","useState","Array","fill","board","setBoard","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","boardCopy","includes","boxShadow","backgroundColor","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LACMA,EAAQ,CACZC,WAAY,YACZC,OAAQ,qBACRC,SAAU,OACVC,WAAY,MACZC,OAAQ,UACRC,QAAS,OACTC,MAAO,OACPC,OAAQ,OACRC,MAAO,UAEIC,EAAS,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAChC,OACE,6BACG,IACD,4BAAQZ,MAAOA,EAAOW,QAASA,GAC5BC,KCdHZ,EAAQ,CACZE,OAAQ,kBACRW,aAAc,OACdN,MAAO,QACPC,OAAQ,QACRM,OAAQ,YACRC,QAAS,OACTC,aAAc,mCAGHC,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASP,EAAZ,EAAYA,QAAZ,OACnB,yBAAKX,MAAOA,GACTkB,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACX,kBAAC,EAAD,CAAQC,IAAKD,EAAGT,MAAOQ,EAAQT,QAAS,kBAAMA,EAAQU,WCZ5D,IAAMrB,EAAQ,CACZO,MAAO,QACPO,OAAQ,WACRX,SAAU,OACVoB,UAAW,UAEAC,EAAO,WAAO,IAAD,EACEC,mBAASC,MAAM,GAAGC,KAAK,OADzB,mBACjBC,EADiB,KACVC,EADU,OAEMJ,oBAAS,GAFf,mBAEjBK,EAFiB,KAERC,EAFQ,KAGlBC,ECbD,SAAyBd,GAW9B,IAVA,IAAMe,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CAAC,IAAD,cACnBY,EAAMZ,GADa,GAC9Bc,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAInB,EAAQiB,IAAMjB,EAAQiB,KAAOjB,EAAQkB,IAAMlB,EAAQiB,KAAOjB,EAAQmB,GACpE,OAAOnB,EAAQiB,GAGnB,OAAO,KDJQG,CAAgBV,GAiC/B,OACE,6BACE,kBAAC,EAAD,CAAOV,QAASU,EAAOjB,QAjCP,SAACU,GAEnB,IAAMkB,EAAS,YAAOX,GAElBI,GAAUO,EAAUlB,KACxBkB,EAAUlB,GAAKS,EAAU,IAAM,IAC/BD,EAASU,GACTR,GAAYD,OA2BV,yBAAK9B,MAAOA,GACV,2BACG,IACAgC,EAAM,oBACUA,EADV,MAEFJ,EAAMY,SAAS,MAEhB,iBAAmBV,EAAU,IAAM,KADnC,qBAGN,+BA7BF,4BACE9B,MAAO,CACLG,SAAU,OACVU,aAAc,OACdP,QAAS,OACTmC,UAAW,uBACXC,gBAAiB,OACjBxC,OAAQ,mBACRG,OAAQ,WAEVM,QAAS,kBAAMkB,EAASH,MAAM,GAAGC,KAAK,SAVxC,mBElBSgB,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCDNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.95f08a4e.chunk.js","sourcesContent":["import React from \"react\";\r\nconst style = {\r\n  background: \"lightblue\",\r\n  border: \"2px solid darkblue\",\r\n  fontSize: \"60px\",\r\n  fontWeight: \"900\",\r\n  cursor: \"pointer\",\r\n  outline: \"none\",\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  color: \"tomato\",\r\n};\r\nexport const Square = ({ onClick, value }) => {\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <button style={style} onClick={onClick}>\r\n        {value}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Square } from \"./Square\";\r\n\r\nconst style = {\r\n  border: \"4px solid white\",\r\n  borderRadius: \"10px\",\r\n  width: \"550px\",\r\n  height: \"500px\",\r\n  margin: \"4rem auto\",\r\n  display: \"grid\",\r\n  gridTemplate: \"repeat(3, 1fr) / repeat(3, 1fr)\",\r\n};\r\n// implicit return\r\nexport const Board = ({ squares, onClick }) => (\r\n  <div style={style}>\r\n    {squares.map((square, i) => (\r\n      <Square key={i} value={square} onClick={() => onClick(i)} />\r\n    ))}\r\n  </div>\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { Board } from \"./Board\";\r\nimport { calculateWinner } from \"./helper\";\r\n\r\nconst style = {\r\n  width: \"500px\",\r\n  margin: \"5px auto\",\r\n  fontSize: \"50px\",\r\n  textAlign: \"center\",\r\n};\r\nexport const Game = () => {\r\n  const [board, setBoard] = useState(Array(9).fill(null));\r\n  const [xIsNext, setXisNext] = useState(true);\r\n  const winner = calculateWinner(board);\r\n\r\n  const handleClick = (i) => {\r\n    // this is a shallow copy\r\n    const boardCopy = [...board];\r\n    // return if user win or click on occupied square\r\n    if (winner || boardCopy[i]) return;\r\n    boardCopy[i] = xIsNext ? \"X\" : \"O\";\r\n    setBoard(boardCopy);\r\n    setXisNext(!xIsNext);\r\n  };\r\n\r\n  // const jumpTo = () => {};\r\n\r\n  const renderMoves = () => {\r\n    return (\r\n      <button\r\n        style={{\r\n          fontSize: \"32px\",\r\n          borderRadius: \"10px\",\r\n          outline: \"none\",\r\n          boxShadow: \"5px 5px 8px 5px grey\",\r\n          backgroundColor: \"gold\",\r\n          border: \"1px solid yellow\",\r\n          cursor: \"pointer\",\r\n        }}\r\n        onClick={() => setBoard(Array(9).fill(null))}\r\n      >\r\n        Start Again\r\n      </button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Board squares={board} onClick={handleClick} />\r\n      <div style={style}>\r\n        <p>\r\n          {\" \"}\r\n          {winner\r\n            ? `Winner is ${winner} !`\r\n            : !board.includes(null)\r\n            ? \"Phew! It's a tie!\"\r\n            : \"Next Player: \" + (xIsNext ? \"X\" : \"O\")}\r\n        </p>\r\n        <p> {renderMoves()}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export function calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n//const squares = [null, null, null, \"X\", \"X\", \"O\", null, null, null];\r\n// return either 'X' or 'O'\r\n","import React from \"react\";\nimport { Game } from \"./components/Game\";\n\nfunction App() {\n  return (\n    <div>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}